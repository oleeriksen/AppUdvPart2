@page "/productlist"
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager navManager
@using ClientApp.Model
<h1 class="mb-3 mt-3">Product list</h1>


<table class="table">
    <thead>
    <tr>
        <th>Navn</th>
        <th>Pris</th>
        <th>Expire Date</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var p in products)
    {
        <ProductComponent product="p" loggedIn="loggedIn"></ProductComponent>
    }
    </tbody>
</table>
@if (loggedIn != null && loggedIn.Role.Equals("admin", StringComparison.CurrentCultureIgnoreCase))
{
    <button class="btn btn-primary" @onclick="GoToAddProduct">New Product</button>
}

<ModalDialog @ref="addProductDialog" Title="Opret produkt...">
    <EditForm Model="@aProduct" OnSubmit="@HandleSubmit" class="row p-3">
        <DataAnnotationsValidator />
        <ValidationSummary />
    
        <div class="col-md-12 mb-3">
            <label for="Name">Name</label>
            <InputText id="Name" @bind-Value="aProduct.Name" class="form-control" />
        </div>
    
        <div class="col-md-6 mb-3">
            <label for="Price">Price</label>
            <InputNumber id="Price" @bind-Value="aProduct.Price" class="form-control" />
        </div>
    
        <div class="col-md-6 mb-3">
            <label for="PublishedDate">Published Date</label>
            <InputDate id="PublishedDate" @bind-Value="aProduct.PublishedDate" class="form-control" />
        </div>
    
        <div class="col-md-12 mb-3">
            <label for="Description">Description</label>
            <InputTextArea id="Description" @bind-Value="aProduct.Description" class="form-control" />
        </div>
    
        <div class="col-md-6 mb-3">
            <label for="Stock">Stock</label>
            <InputNumber id="Stock" @bind-Value="aProduct.Stock" class="form-control" />
        </div>
    
        <div class="col-md-6 mb-3">
            <label for="category">Category</label>
            <InputSelect id="category" @bind-Value="aProduct.Category" class="form-control">
                @foreach (var c in categories)
                {
                    <option value="@c">@c</option>
                }
            </InputSelect>
        </div>
    
        <div class="col-md-6 mb-3">
            <label for="IsPublished">Is published</label>
            <InputCheckbox id="IsPublished" @bind-Value="aProduct.IsPublished" class="form-check-input"/>
        </div>
    
        <div class="col-12 mb-3">
            <button type="submit" class="btn btn-primary">Submit</button>
        </div>
    
    </EditForm>
</ModalDialog>
@code {

    private List<Product> products = new();

    User? loggedIn;

    ModalDialog? addProductDialog { get; set; }
    
    private Product aProduct = new();
    
    private string[] categories = ["computer", "audio", "video", "memory", "other"];



    protected override async Task OnInitializedAsync()
    {
        var p = await localStorage.GetItemAsync<List<Product>>("products");
        if (p == null)
            products = new();
        else
        {
            products = p;
        }
        loggedIn = await localStorage.GetItemAsync<User?>("user");
        
    }

    private void GoToAddProduct()
    {
        addProductDialog.Open();
    }
    
    private async Task HandleSubmit()
    {
        aProduct.ExpireDate = aProduct.PublishedDate.AddYears(1);
        products.Add(aProduct);
        aProduct = new();
        await localStorage.SetItemAsync("products", products);
        addProductDialog.Close();
    }

}


