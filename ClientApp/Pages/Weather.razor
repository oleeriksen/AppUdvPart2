@page "/weather"
@inject HttpClient Http
@using ClientApp.Logic

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Date</th>
            <th aria-label="Temperature in Celsius">Temp. (C)</th>
            @if (FVises)
            {
                <th aria-label="Temperature in Farenheit">Temp. (F)</th>
            }
            <th>Summary</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var forecast in forecasts)
        {
            <tr>
                <td>@forecast.Date.ToShortDateString()</td>
                <td>@forecast.TemperatureC</td>
                @if (FVises)
                {
                    <td>@forecast.TemperatureF</td>
                }
                <td>@forecast.Summary</td>
            </tr>
        }
        </tbody>
    </table>
    <button class="btn btn-primary" @onclick="ToogleF">@TextOnButton</button>

}

@code {
    private WeatherForecast[]? forecasts;

    private bool FVises = false;

    protected override void OnInitialized()
    {
        string[] summaries = { "Koldt og blæsende", "varmt og solrigt", "stille og gråt" };

        forecasts = Enumerable.Range(0, 20).Select((idx) =>
            new WeatherForecast
            {
                Date = DateOnly.FromDateTime(DateTime.Now.AddDays(idx)),
                TemperatureC = Random.Shared.Next(20) + 1,
                Summary = summaries[Random.Shared.Next(summaries.Length)]
            }).ToArray();
    }

    private string TextOnButton => FVises? "Skjul F": "Vis F";

    private void ToogleF() {
        FVises = !FVises;
    }

}